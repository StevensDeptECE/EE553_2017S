int main() {
	int a = 3 & 5; // bitwise AND      0000000011 & 00000000101
	//  00000000011
	//	00000000101
	//=============
	//  00000000001 = 1
	int b = 3 | 5; // bitwise OR
	//  00000000011
	//	00000000101
	//=============
	//  00000000111 = 7
	
	int c = 3 ^ 5; // bitwise XOR
	//  00000000011
	//	00000000101
	//=============
	//  00000000110 = 6

	
	int d = ~3;    // NOT
	//00000000000000000000000000000011
	//11111111111111111111111111111100
	
	int e = 1 << 5; // left shift  equivalent to mult by 2 to the k
	// 00000000000000000000001
	// 00000000000000000100000 // 32


	// 50  ==> 500
	
	int f = 1024 >> 3; // right shift  equivalent to / 2 to the k
	// 0000000000010000000000 = 1024
	// 0000000000000010000000 = 128 = 2 to the 7
	int g = 5;

	g <<= 2;

	// there are 12 op= types    += -= *= /= %= &= |= ^= <<= >>=
	// x = x OP y   ==>  x OP= y
	int x = 192;
	const int m = 16*1024*1024/3;
	x /= 3; // compiler might do: x * m >> 24




	


}